@model Telerik.Web.Mvc.GridModel<TestimonialsModel>


<div class="pageContainer">

    @Html.Partial("_Breadcrumb", "Client & Testimonials")


    @(Html.Telerik().Grid<TestimonialsModel>()
           .Name("currencies-grid")
           .BindTo(Model.Data)
           .Columns(columns =>
           {
               columns.Bound(x => x.ClientName).Width(250).Template(x => Html.ActionLink(x.ClientName, "Edit", "ClientTestimonials", new { id = x.Id }, new { }));
               columns.Bound(x => x.PersonName).Width(250).Template(x => Html.ActionLink(x.PersonName, "Edit", "ClientTestimonials", new { id = x.Id }, new { }));
               columns.Bound(x => x.IsActive).Centered().Template(item => @Html.SymbolForBool(item.IsActive)).ClientTemplate(@Html.SymbolForBool("Published"));
               columns.Bound(x => x.OrderNo).Centered();
               columns.Bound(x => x.Id)
                   .Template(x => Html.ActionLink("Edit", "Edit", new { id = x.Id }, new { @class = "t-button" }))
                   .ClientTemplate("<a href=\"ClientTestimonials/Edit/<#= Id #>\" class=\"t-button\">Edit</a>")
                   .Title(String.Empty).Width(100)
                   .HtmlAttributes(new { align = "right", @class = "omega" });
            }).Pageable(settings => settings.Total(Model.Total).PageSize(10).Position(GridPagerPosition.Both))
    )

</div>


<div class="pageSide">
    <ul class="js-scroll-nav duik-content-nav">
        <li class="duik-content-nav__item contents">Actions</li>
        <li>
            <a class="btn btn-sleek-primary btn-sm btn-block" href="@Url.Action("Create", "ClientTestimonials")">
                <i class="fa fa-plus mr-1 fs-12"></i> Add New
            </a>
        </li>
    </ul>
</div>